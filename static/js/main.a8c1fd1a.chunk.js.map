{"version":3,"sources":["components/SearchBox.js","components/Title.js","components/Logo.js","components/Header-Content.js","components/Credits.js","containers/Header.js","components/Card.js","components/CardList.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","id","className","type","placeholder","onChange","Title","Logo","src","process","alt","Header_Content","props","children","Credits","href","icon","faGithub","Header","onSearchChange","event","searchField_value","target","value","header","document","getElementById","cardList","foldHeader","setState","searchField","filteredRobots","state","robots","filter","includesSearchField","searching","robot","includes_field","field","toString","toLowerCase","includes","scrollFunction","is_scrolled","body","scrollTop","documentElement","searchField_empty","console","log","classList","add","style","margin","folded","remove","marginTop","display","this","fetch","then","response","json","users","window","onscroll","Component","Card","name","email","username","printCard","CardList","map","ErrorBoundry","hasError","App","changedSearchField","robotsFiltered","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a8c1fd1a.chunk.js","sourcesContent":["import React from 'react';\n//import tachyons from 'tachyons';\nconst SearchBox = ({ searchChange }) => {\n    return (\n            <div id=\"searchbox\">\n                <input id='search-input' className='tc pa2 navy bg-light-blue' type=\"search\" placeholder='search a robot' onChange={searchChange}/>\n            </div>\n    );\n}\n\n\nexport default SearchBox;\n","import React, { Component } from 'react'\nimport './Title.css'\nconst Title = () => {\n    return (\n        <h1 id='header-title'>Robofriends</h1>\n    );\n}\n\nexport default Title;\n","import React, { Component } from 'react'\n\nconst Logo = () => {\n       return <div id=\"main-logo-container\">\n            <img id='main-logo' src={process.env.PUBLIC_URL + '/Markel.png'} alt=\"markel\"/>\n        </div>\n}\n\nexport default Logo;\n","import React, { Component } from 'react'\n\nconst Header_Content = (props) => {\n    return <div id=\"header-content\">\n        { props.children }\n        </div>\n}\n\n\nexport default Header_Content\n","import './Credits.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst Credits = () => {\n    return <div id=\"credits\">\n        <p>\n            By\n            <a id='github-account' href='https://github.com/MarkelCA'>  \n                <FontAwesomeIcon icon={faGithub} /> Markel Cuesta\n            </a>\n\n        </p>\n\n        </div>\n}\n\nexport default Credits\n\n","import React, { Component } from 'react';\nimport SearchBox from '../components/SearchBox';\nimport Title from '../components/Title';\nimport Logo from '../components/Logo.js'\nimport Header_Content from '../components/Header-Content.js'\nimport Credits from '../components/Credits'\nimport './Header.css'\n\n\nclass Header extends Component {\n        /*\n         * It's important for Header to have its own robots state\n         * so we can change the App's robots state without modifying \n         * this one, otherwise we can't recover the robots after filtering\n         */\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchField : \"\"\n        }\n    }\n\n    onSearchChange = (event) => {\n        const searchField_value = event.target.value;\n        const header = document.getElementById('header')\n        const cardList = document.getElementById('robot-list')\n\n        if(searchField_value)\n            this.foldHeader(header, cardList, false)\n        else\n            this.foldHeader(header, cardList, true)\n\n        this.setState({ searchField:searchField_value }, () => {\n            // We destructure for a clear syntax\n            const { robots } = this.state;\n            const filteredRobots = robots.filter(this.includesSearchField)\n            this.props.searching(filteredRobots)\n\n        });\n    }\n\n    includesSearchField = (robot) => {\n    let includes_field = false\n        // We destructure for a clear syntax\n        const { searchField } = this.state\n        // We search by all the fields of the robot\n        for(const field in robot){\n            includes_field = robot[field]\n                .toString()\n                .toLowerCase()\n                .includes( searchField.toLowerCase() )\n\n            if (includes_field) return includes_field\n        }\n\n        // NOT REACHEABLE\n        // Prevents bug if there are no fields on the robot\n        return false;\n    }\n    scrollFunction = () => {\n        const header = document.getElementById('header')\n        const cardList = document.getElementById('robot-list')\n        const is_scrolled = document.body.scrollTop > 100 || document.documentElement.scrollTop > 100\n        const searchField_empty = this.state.searchField === ''\n        console.log('lfdkjflkf;kjk')\n\n        if(!searchField_empty) {\n            header.classList.add('small')\n            cardList.style.margin = '0'\n            console.log('notempty')\n            return\n        }\n\n        if(is_scrolled) \n            this.foldHeader(header, cardList, false)\n        \n        else \n            this.foldHeader(header,cardList, true)\n        \n    }\n    foldHeader(header, cardList, folded) {\n        if(folded) {\n            header.classList.remove('small')\n            cardList.style.marginTop = '50vh'\n            document.getElementById('credits').style.display = 'block'\n        }\n        else {\n            header.classList.add('small')\n            cardList.style.margin = '0'\n            document.getElementById('credits').style.display = 'none'\n        }\n\n    }\n    render() {\n        return (\n            <div id=\"header\" className='mv3'>\n                <Logo/>\n                <Header_Content>\n                    <Title/>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Credits/>\n                </Header_Content>\n            </div>\n        );\n    };\n\n    componentDidMount() {\n        // We fetch the robots from a test api into json\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then( response =>  response.json() )\n            .then( users =>  this.setState({ robots : users }) )\n        window.onscroll = this.scrollFunction;\n    }\n}\n\nexport default Header;\n","import 'tachyons';\nconst Card = ({name, email, id, username}) => {\n    return (\n        <div className='tc bg-white dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/${id}?100x100`} alt=\"robots\" />\n            <h2>@{username}</h2>\n            <h3><em>{name}</em></h3>\n            <p>{email}</p>\n        </div>\n    );\n\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card.js';\n\nconst CardList = ({ robots }) => {\n    // The next line it's just to test the ErrorBoundry component\n    //throw new Error('Something went wrong')\n    return (\n        <div id='robot-list' className=\"cards-wrapper tc bg-light-blue\">\n            {robots.map(printCard)}\n        </div>\n    );\n}\n\nconst printCard = ( { id, name, email, username }) => {\n    return <Card key={id} id={id} name={name} email={email} username={username} />\n}\n\nexport default CardList;\n","import React, { Component } from 'react'\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super()\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch() {\n        this.setState({ hasError: true })\n    }\n    render() {\n        const { hasError } = this.state\n                const error_message = <p>Error loading the component</p>\n                return hasError ?  error_message : this.props.children\n    }\n\n}\n\nexport default ErrorBoundry\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport './App.css'\n\nclass App extends Component {\n    constructor() {\n            super();\n            this.state = {\n                robots: []\n            };\n        }\n\n        /*\n        * Function that updates the robot state list based on searchBox filter\n        */\n        changedSearchField = (robotsFiltered) => { this.setState({ robots : robotsFiltered }) }\n\n\n    render(){\n        // We destructure for a clear syntax\n        const { robots } = this.state\n        return (\n            <div id=\"container\" className='tc'>\n                <Header robots = { robots } searching={this.changedSearchField}/>\n                    <ErrorBoundry>\n                        <CardList robots={ robots } />\n                    </ErrorBoundry>\n            </div>\n        );\n    };\n    componentDidMount() {\n        // We fetch the robots from a test api into json\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then( response =>  response.json() )\n            .then( users =>  this.setState({ robots : users }) )\n    }\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals.js';\n\nReactDOM.render(\n    <React.StrictMode> \n        <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// Web Vitals are a set of useful metrics that aim to capture the user experience of a web page. In Create React App, a third-party library is used to measure these metrics (web-vitals).\nreportWebVitals(/*console.log*/); \n\n"],"sourceRoot":""}